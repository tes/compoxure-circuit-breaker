{
  "name": "node-redis-warlock",
  "version": "0.0.7",
  "description": "Battle-hardened distributed locking using redis",
  "main": "lib/warlock.js",
  "scripts": {
    "test": "make test"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/thedeveloper/warlock"
  },
  "keywords": [
    "node.js",
    "redis",
    "lock"
  ],
  "author": {
    "name": "Geoff Wagstaff"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/thedeveloper/warlock/issues"
  },
  "homepage": "https://github.com/thedeveloper/warlock",
  "dependencies": {
    "node-redis-scripty": "~0.0.4"
  },
  "devDependencies": {
    "should": "^3.1.3",
    "mocha": "^1.17.1",
    "redis": "^0.10.1"
  },
  "readme": "warlock\n=======\n\nBattle-hardened distributed locking using redis.\n\n## Requirements\n\n* [node-redis](https://github.com/mranney/node_redis) compatible with `v0.10`\n* Redis `v2.6` or above\n\n## Install\n\n    npm install node-redis-warlock\n\n## Usage\n\n```javascript\n\nvar Warlock = require('node-redis-warlock');\nvar redis = require('redis');\n\n// Establish a redis client and pass it to warlock\nvar redis = redis.createClient();\nvar warlock = Warlock(redis);\n\n// Set a lock\nvar key = 'test-lock';\nvar ttl = 10000;\n\nwarlock.lock(key, ttl, function(err, unlock){\n  if (err) {\n    // Something went wrong and we weren't able to set a lock\n    return;\n  }\n\n  if (typeof unlock === 'function') {\n    // If the lock is set successfully by this process, an unlock function is passed to our callback.\n    // Do the work that required lock protection, and then unlock() when finished...\n    //\n    // do stuff...\n    //\n    unlock();\n  } else {\n    // Otherwise, the lock was not established by us so we must decide what to do\n    // Perhaps wait a bit & retry...\n  }\n});\n\n```\n\n## ProTips\n\n* Warlock uses Lua scripting to achieve transactional locking on Redis `v2.6.0` upwards. If you're running Redis `v2.6.12` or above you could use the additional PX and NX arguments for the [SET](http://redis.io/commands/set) operation as an alternative.\n* Read my [Distributed locks using Redis](https://engineering.gosquared.com/distributed-locks-using-redis) article and Redis' author's [A proposal for more reliable locks using Redis](http://antirez.com/news/77) to learn more about the theory of distributed locks using Redis.\n",
  "readmeFilename": "README.md",
  "_id": "node-redis-warlock@0.0.7",
  "_shasum": "51001d0b690da7276657800075d30cca8c32bc7d",
  "_from": "node-redis-warlock@0.0.7",
  "_resolved": "https://registry.npmjs.org/node-redis-warlock/-/node-redis-warlock-0.0.7.tgz"
}
